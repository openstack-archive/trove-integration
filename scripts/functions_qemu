#!/bin/bash
#
# Additional functions that would mostly just pertain to a Ubuntu + Qemu setup
#

function install_prep_packages() {
    # Called before devstack
    exclaim 'Updating dependencies (part 1a)...'
    pkg_update
    exclaim 'Installing dependencies (part 1b)...'
    pkg_install git-core kvm-ipxe ubuntu-vm-builder
}

function build_vm() {
    exclaim "Actually building the image, this can take up to 15 minutes"

    HOMEDIR=$1
    HOST_USERNAME=$2
    GUEST_USERNAME=${GUEST_USERNAME:-$2}
    UBUNTU_DISTRO_NAME=$3
    VM_PATH=$4
    SERVICE_TYPE=$5

    mkdir -p $VM_PATH
    export RELEASE=precise
    export HOST_USERNAME
    export GUEST_USERNAME
    export REDSTACK_SCRIPTS
    export SERVICE_TYPE
    export ESCAPED_PATH_REDDWARF
    ${PATH_DISKIMAGEBUILDER}/bin/disk-image-create -a amd64 -o "${VM_PATH}/${UBUNTU_DISTRO_NAME}_mysql_image" -x base vm reddwarf-guest reddwarf-mysql
}

function cmd_build_image() {
    exclaim "Building an image for use with development and integration tests."
    if [ -z "$1" ]
    then
        echo "You must pass an image type to build, like mysql"
        exit 1
    fi
    SERVICE_TYPE=$1


    USERNAME=`whoami`
    mkdir -p $USERHOME/images
    VM_PATH=$USERHOME/images/precise_${SERVICE_TYPE}_image
    UBUNTU_DISTRO=ubuntu_precise
    UBUNTU_DISTRO_NAME=precise

    # If the path doesnt exist, build it, otherwise just upload it
    if [ ! -d $VM_PATH ]
    then
        build_vm $USERHOME $USERNAME $UBUNTU_DISTRO_NAME $VM_PATH $SERVICE_TYPE
    else
        exclaim "Found image in $VM_PATH using the qcow2 image found here..."
    fi

    QCOW_IMAGE=`find $VM_PATH -name '*.qcow2'`
    REDDWARF_TOKEN=`retrieve_token reddwarf REDDWARF-PASS reddwarf`

    # Now upload it
    upload_image_to_glance "${UBUNTU_DISTRO_NAME}_mysql_image" ovf qcow2 $REDDWARF_TOKEN $QCOW_IMAGE $SERVICE_TYPE
}

function clean_instances() {
    LIST=`virsh -q list|awk '{print $1}'`
    for i in $LIST; do sudo virsh destroy $i; done
}
