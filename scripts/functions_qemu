#!/bin/bash
#
# Additional functions that would mostly just pertain to a Ubuntu + Qemu setup
#

function build_vm() {
    exclaim "Actually building the image, this can take up to 15 minutes"

    # set variables here and ensure they are not changed during the duration of this script
    readonly HOST_USERNAME=$1
    GUEST_USERNAME=${GUEST_USERNAME:-$1}
    VM=$2
    DISTRO=$3
    SERVICE_TYPE=$4

    if [ $DISTRO == 'ubuntu' ]; then
        export RELEASE=precise
        export DIB_RELEASE=$RELEASE
        export DIB_CLOUD_IMAGES=cloud-images.ubuntu.com
    fi
    if [ $DISTRO == 'fedora' ]; then
        EXTRA_ELEMENTS=selinux-permissive
    fi
    export HOST_USERNAME
    export GUEST_USERNAME
    export NETWORK_GATEWAY
    export REDSTACK_SCRIPTS
    export SERVICE_TYPE
    export PATH_TROVE
    export ESCAPED_PATH_TROVE
    export SSH_DIR
    export GUEST_LOGDIR
    export ESCAPED_GUEST_LOGDIR
    export ELEMENTS_PATH=$REDSTACK_SCRIPTS/files/elements:$PATH_TRIPLEO_ELEMENTS/elements
    ${PATH_DISKIMAGEBUILDER}/bin/disk-image-create -a amd64 -o "${VM}" -x ${DISTRO} ${EXTRA_ELEMENTS} vm heat-cfntools ${DISTRO}-guest ${DISTRO}-${SERVICE_TYPE}
}

function build_guest_image() {
    exclaim "Building an image for use with development and integration tests."
    if [ -z "$1" ]
    then
        echo "You must pass an image type to build, like mysql"
        exit 1
    fi
    SERVICE_TYPE=$1


    VALID_SERVICES='mysql percona redis cassandra couchbase mongodb'
    if [ `expr  "$VALID_SERVICES" : ".*$SERVICE"` -eq 0 ] ; then
        exclaim "You did not pass in a valid image type. Valid types are:" $VALID_SERVICES
        exit 1
    fi

    GUEST_LOGDIR=$(iniget $PATH_TROVE/etc/trove/trove-guestagent.conf.sample DEFAULT log_dir)
    GUEST_LOGFILE=$(iniget $PATH_TROVE/etc/trove/trove-guestagent.conf.sample DEFAULT log_file)

    if [ -z $GUEST_LOGDIR ] || [ -z $GUEST_LOGFILE ]
    then
        exclaim "error: log_dir and log_file are required in: " $PATH_TROVE/etc/trove/trove-guestagent.conf.sample
        exit 1
    fi

    ESCAPED_GUEST_LOGDIR=`echo $GUEST_LOGDIR | sed 's/\//\\\\\//g'`

    USERNAME=`whoami`
    # To change the distro, edit the redstack.rc file
    readonly IMAGENAME=${DISTRO}_${SERVICE_TYPE}
    readonly VM_PATH=$USERHOME/images/${IMAGENAME}
    readonly VM_PATH_NAME=${VM_PATH}/${IMAGENAME}
    mkdir -p $VM_PATH

    # If the path does not exist, build it, otherwise just upload it
    if [ ! -d $VM_PATH ] || [ `ls -1 $VM_PATH | wc -l` -eq '0' ]
    then
        build_vm $USERNAME $VM_PATH_NAME $DISTRO $SERVICE_TYPE
    else
        exclaim "Found image in $VM_PATH using the qcow2 image found here..."
    fi
}

function clean_instances() {
    LIST=`virsh -q list|awk '{print $1}'`
    for i in $LIST; do sudo virsh destroy $i; done
}
